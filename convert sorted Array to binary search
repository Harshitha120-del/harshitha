import java.util.*;

class TreeNode {
    int val;
    TreeNode left, right;
    TreeNode(int val) { this.val = val; }
}

public class Main {
    public TreeNode sortedArrayToBST(int[] nums) {
        return CreateBST(nums, 0, nums.length - 1);
    }

    private TreeNode CreateBST(int[] nums, int l, int r) {
        if (l > r) return null;
        int mid = l + (r - l) / 2;
        TreeNode root = new TreeNode(nums[mid]);
        root.left = CreateBST(nums, l, mid - 1);
        root.right = CreateBST(nums, mid + 1, r);
        return root;
    }

    public static List<Integer> levelOrder(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if (root == null) return result;

        q.add(root);
        while (!q.isEmpty()) {
            TreeNode node = q.poll();
            if (node != null) {
                result.add(node.val);
                q.add(node.left);
                q.add(node.right);
            } else {
                result.add(null);
            }
        }

        while (!result.isEmpty() && result.get(result.size() - 1) == null)
            result.remove(result.size() - 1);

        return result;
    }

    public static void main(String[] args) {
        int[] input = {-10, -3, 0, 5, 9};
        Main sol = new Main();
        TreeNode root = sol.sortedArrayToBST(input);
        System.out.println(levelOrder(root)); // Output: [0, -10, 5, null, -3, null, 9]
    }
}

